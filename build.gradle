plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.palantir.docker" version "0.34.0"
	id "com.palantir.docker-compose" version "0.34.0"
}
group = 'com.usb.dictionary'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.poi:poi:5.2.0'
	implementation 'org.apache.poi:poi-ooxml:5.2.0'
	//implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	//implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	//implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	testImplementation "org.testcontainers:testcontainers:1.17.3"
	testImplementation "org.testcontainers:junit-jupiter:1.17.3"
	testImplementation "org.testcontainers:elasticsearch:1.17.3"
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	layered{
		enabled = true
	}
}

docker{
	name "${project.name}:${project.version}"
	copySpec.from("build").into("build")
}

dockerComposeUp {
	dependsOn 'docker'
}

task runApp(type:org.gradle.api.tasks.GradleBuild){
	test.enabled = false
	tasks=['clean', 'build', 'docker', 'dockerComposeUp']
	doLast{
		println 'Running...'
	}
}

task stopApp(type:Exec){
	commandLine 'docker-compose', 'down'
}