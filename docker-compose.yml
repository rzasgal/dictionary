version: '2.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    container_name: dictionary_zookeeper
    environment:
      - ZOOKEEPER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SERVER_1=zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.2.0
    container_name: dictionary_kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=EXTERNAL://kafka:9091,INTERNAL://kafka:39091
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9091:9091"
    depends_on:
      - zookeeper
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9091 --list
      interval: 30s
      timeout: 10s
      retries: 3
  elasticsearch:
    image: elasticsearch:7.16.3
    container_name: dictionary_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "9200:9200"
    expose:
      - 9200
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
  neo4j:
    image: neo4j:5.10.0
    container_name: dictionary_neo4j
    environment:
      - NEO4J_AUTH=neo4j/neo4jTtk-
      - NEO4J_server_config_strict__validation_enabled=false
    ports:
      - "7474:7474"
      - "7687:7687"
    expose:
      - 7474
      - 7687
    healthcheck:
      test: wget --user neo4j --password neo4jTtk- --no-verbose --tries=1 --spider http://localhost:7474 > /dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
  app:
    image: 'dictionary:0.0.1-SNAPSHOT'
    build:
      context: .
    container_name: dictionary
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "8080:8080"
    expose:
      - 8080
    depends_on:
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      neo4j:
        condition: service_healthy